When a user logs in to an application, the login information typically needs to be verified, and upon successful verification, a mechanism (like a session or a token) is used to maintain the logged-in state. Here’s a typical flow of actions for a login process in a web application:

Flow of Actions for User Login
<!-- #1 User Enters Credentials: -->
The user enters their email and password on the login page and submits the form.

<!-- #2 Frontend Sends Login Request: -->
The frontend sends an HTTP POST request to the backend with the user's credentials.

<!-- #3 Backend Receives Login Request: -->
The backend receives the login request and extracts the email and password.

<!-- #4 Backend Fetches User Data: -->
The backend queries the database to fetch the user record corresponding to the provided email.

<!-- #5 Backend Verifies Password: -->
The backend compares the provided password with the hashed password stored in the database using a library like bcrypt.

<!-- #6 Generate Token (or Session): -->
If the password is verified, the backend generates a JWT (JSON Web Token) or a session ID.

The token/session ID is sent back to the frontend in the response.

<!-- #7 Frontend Stores Token (or Session): -->
The frontend stores the token in local storage or session storage, or handles cookies for sessions.

<!-- #8 Subsequent Requests Include Token (or Session): -->
For any subsequent requests to protected routes, the frontend includes the token in the HTTP headers (usually in the Authorization header).

<!-- #9 Backend Verifies Token (or Session): -->
The backend verifies the token on each request to ensure the user is authenticated before allowing access to protected resources.


 "options": {
    "allowedHosts": ["localhost", ".localhost"],
    "proxy": "https://localhost:5000/"
  }


// import React, { useEffect, useState, useCallback } from "react";
// import axios from "axios";
// import { useNavigate } from "react-router-dom";
// import ChatDisplay from "./ChatHomePage/ChatDisplay";
// import Chats from "./ChatHomePage/Chats";
// import ChatUsers from "./ChatHomePage/ChatUsers";

// function HomePage({ inputValue = {}, handleSendMessage }) {
//   const [user, setUser] = useState(null);
//   const [selectedUser, setSelectedUser] = useState(null);
//   const [messages, setMessages] = useState([]);
//   const [loading, setLoading] = useState(true);

//   const navigate = useNavigate();

//   console.log("User state:", user);

//   const handleLogout = useCallback(() => {
//     localStorage.removeItem("token");
//     localStorage.removeItem("user");
//     setSelectedUser();
//     setMessages([]);
//     setUser(null);
//     setTimeout(() => {
//       navigate("/");
//     }, 2000);
//   }, [navigate]);

//   const storedUser = localStorage.getItem("user");
//   console.log("storedUser:", storedUser);

//   const parsedUser = storedUser ? JSON.parse(storedUser) : null;
//   console.log("parsedUser:", parsedUser);
//      const token = localStorage.getItem("token");
//     console.log("token:", token);
//     console.log("TOKEN from localStorage:", localStorage.getItem("token"));


//   // useEffect(() => {
 
//   //   if (!parsedUser || !token) return;
//   //   if (parsedUser && selectedUser?.user_id !== parsedUser.user_id) {
//   //     setSelectedUser(parsedUser);
//   //   }
//   // }, [parsedUser, selectedUser, storedUser]);

//   // const fetchUserData = async () => {
//   //   try {
//   //     const userRes = await axios.get(`/api/users/${parsedUser.user_id}`, {
//   //       headers: { Authorization: `Bearer ${token}` },
//   //     });

//   //     console.log("Fetched user:", userRes.data);
//   //     setUser(userRes.data);

//   //     const messagesRes = await axios.get(
//   //       `/api/messages/${parsedUser.user_id}`,
//   //       {
//   //         headers: { Authorization: `Bearer ${token}` },
//   //       }
//   //     );

//   //     setMessages(messagesRes.data);
//   //     setLoading(false);
//   //   } catch (err) {
//   //     if (err.response?.status === 403) {
//   //       console.warn("Forbidden — wrong user or expired token.");
//   //     } else {
//   //       console.error("Fetch error:", err);
//   //     }
//   //   } finally {
//   //     setLoading(false);
//   //   }

//   //   };

// const fetchUserData = useCallback(async () => {
//   try {
//     const userRes = await axios.get(`/api/users/${parsedUser.user_id}`, {
//       headers: { Authorization: `Bearer ${token}` },
//     });

//     console.log("Fetched user:", userRes.data);
//     setUser(userRes.data);

//     const messagesRes = await axios.get(
//       `/api/messages/${parsedUser.user_id}`,
//       {
//         headers: { Authorization: `Bearer ${token}` },
//       }
//     );

//     setMessages(messagesRes.data);
//   } catch (err) {
//     if (err.response?.status === 403) {
//       console.warn("Forbidden — wrong user or expired token.");
//     } else {
//       console.error("Fetch error:", err);
//     }
//   } finally {
//     setLoading(false);
//   }
// }, [parsedUser?.user_id, token]); 

// useEffect(() => {
//   if (parsedUser && token) {
//     fetchUserData();
//   }
// }, [parsedUser, token, fetchUserData]); 



//   return (
//     <div className='home-page'>
//       {loading ? (
//         <p>Loading...</p>
//       ) : (
//         <div>
//           <h1>Welcome, {user.user.username}</h1>

//           {user?.image_url && (
//             <img
//               src={user.image_url}
//               alt={user.username}
//               className='profile-pic'
//               onClick={() => setSelectedUser(user)}
//             />
//           )}
//         </div>
//       )}

//       <button className='logout' onClick={handleLogout}>
//         Log Out
//       </button>

//       <div>
//         <ChatDisplay
//           inputValue={inputValue}
//           messages={messages}
//           setMessages={setMessages}
//           loggedInUser={parsedUser}
//           selectedUser={selectedUser}
//           setSelectedUser={setSelectedUser}
//         />
//         <Chats
//           inputValue={inputValue}
//           setChats={setMessages}
//           messages={messages}
//           selectedUser={selectedUser}
//           setSelectedUser={setSelectedUser}
//           loggedInUser={parsedUser}
//           handleSendMessage={handleSendMessage}
//         />
//       </div>
//     </div>
//   );
// }

// export default HomePage;
